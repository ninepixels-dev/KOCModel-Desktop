<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        UAxZ7wAAAABJRU5ErkJggg==
</value>
  </data>
</root>